- unless @act_files.empty?
  %table.legislation-files
    %caption Acts
    %thead
      %tr
        %th Name
        %th Text output
        %th Size
        %th Regenerate
    %tfoot
      %tr
        %th Name
        %th Text output
        %th Size
        %th Regenerate
    %tbody
      -@act_files.each do |file|
        %tr.legislation-file{:class => cycle("even", "odd")}
          %td.name= link_to File.basename(file, ".xml"), "act?file=#{file}"
          %td.text &nbsp;
          %td.size= number_to_human_size(File.size(file))
          %td.regenerate &nbsp;
- unless @files_by_bill.empty?
  - @bill_names.each do |bill_name|
    - key = bill_name.blank? ? nil : bill_name
    - files = @files_by_bill[key]
    %table.mif-files
      %caption= key ? bill_name : '(No bill named)'
      %thead
        %tr
          %th Name
          %th Text output
          %th Size
          %th Regenerate
      %tfoot
        %tr
          %th Name
          %th Text output
          %th Size
          %th Regenerate
      %tbody
        - files.each do |file|
          %tr.mif-file{:class => cycle("even", "odd")}
            %td.name= link_to file.name, "convert?file=#{file.path}"
            %td.text= link_to "Text", "convert?file=#{file.path}&format=text"
            %td.size= number_to_human_size(File.size(file.path))          
            %td.regenerate
              - if file.haml_template_exists?
                = link_to 'Regenerate', :contoller => "application", :action => "convert", :force => 'true', :file=>"#{file.path}", :method => 'get'
              - else
                &nbsp;
- else
  %p No files available to parse
